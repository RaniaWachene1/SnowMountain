server {
    listen 80;
    server_name snowMountain;

    # Serve Angular app from the browser directory
    root /usr/share/nginx/html/browser;
    index index.html;

    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy requests to the Spring Boot backend
    location /api/ {
        proxy_pass http://192.168.80.148:8089/;  # Backend URL

        # CORS Headers (only necessary ones)
        add_header 'Access-Control-Allow-Origin' '*';  # Allow all origins, but specify the domain in production
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';

        # Pass headers to the backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Handle preflight (OPTIONS) requests for CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Length' 0;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            return 204;
        }
    }

    # Static file caching for performance
    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        expires 1y;
        access_log off;
        add_header Cache-Control "public";
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Handle 404 errors by serving the Angular app's index.html
    error_page 404 /index.html;
    location = /index.html {
        internal;
    }
}
